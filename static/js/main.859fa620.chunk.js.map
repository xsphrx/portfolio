{"version":3,"sources":["components/ThreeBackground.js","components/ThreeTable.js","components/WaveTest.js","components/TesselationTest.js","components/ShadowTest.js","components/Work.js","components/Works.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["Component","TWEEN","require","THREE","window","ThreeTable","state","rotate","pressed","distorted","checkItersect","loaded","showReset","start","_this","frameId","requestAnimationFrame","animate","handleScroll","e","deltaY","animateVector3","controls","target","Vector3","duration","easing","Easing","Quadratic","InOut","runOnUpdate","update","onClick","raycaster","setFromCamera","mouse","camera","intersects","intersectObjects","scene","children","length","containsObject","object","vectorToAnimate","options","to","In","tweenVector3","Object","assertThisInitialized","Tween","x","y","z","onUpdate","d","onComplete","callback","fitCameraToObject","selection","fitOffset","arguments","undefined","box","Box3","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","expandByObject","err","return","size","getSize","center","getCenter","fitHeightDistance","Math","max","atan","PI","fov","fitWidthDistance","aspect","distance","direction","clone","sub","position","normalize","multiplyScalar","maxDistance","copy","near","far","updateProjectionMatrix","obj","objectsIncluded","hasOwnProperty","checkIfIntersects","intersected","stopHover","hover","onMouseMove","event","clientX","innerWidth","clientY","innerHeight","ray","intersectPlane","plane","pointOfIntersection","lookAt","gltf","sceneSetup","Scene","background","Color","renderer","WebGLRenderer","antialias","shadowMap","enabled","type","PCFSoftShadowMap","setPixelRatio","devicePixelRatio","setSize","mount","appendChild","domElement","PerspectiveCamera","set","MapControls","enableZoom","addEventListener","mainText","portfolio","Vector2","Raycaster","uniforms","amplitude","counter","objectsToShake","lightSetup","light","AmbientLight","add","DirectionalLight","button","setFromObject","geometry","PlaneGeometry","material","MeshLambertMaterial","transparent","opacity","mesh","Mesh","rotation","setFromVector3","document","body","style","cursor","textBackground","BoxGeometry","color","console","log","scale","Out","text","font","posx","posy","posz","TextGeometry","height","curveSegments","bevelThickness","bevelSize","bevelEnabled","tessellateModifier","TessellateModifier","i","modify","numFaces","BufferGeometry","fromGeometry","attributes","count","displacement","Float32Array","f","index","random","addAttribute","BufferAttribute","shaderMaterial","ShaderMaterial","vertexShader","getElementById","textContent","fragmentShader","shake","reset","resetQuick","textSetup","FontLoader","load","push","portfolioBackground","portfolioButton","props","showWork","CV","CVBackground","CVButton","open","loadFrank","GLTFLoader","traverse","node","castShadow","up","receiveShadow","yoyo","repeat","Infinity","pressingDown","notPressingDown","setState","forEach","distort","checkTesselation","render","this","BoxBufferGeometry","MeshNormalMaterial","translate","quaternion","Plane","normal","applyQuaternion","helper","PlaneHelper","_this2","react_default","a","createElement","Fragment","ref","className","Technology","tech","useSpring","transform","from","web","div","map","item","key","GoToWebsite","link","github","href","src","margin","marginTop","Work","show","imgIndex","delay","_callee","delayInms","regenerator_default","wrap","_context","prev","abrupt","Promise","resolve","setTimeout","stop","changeIndex","_callee2","_context2","Array","isArray","img","maxWidth","border","width","boxShadow","onMouseOver","Work_Technology","Work_GoToWebsite","Works","bool","works","id","showTable","components_Work","Show","_useState","useState","_useState2","slicedToArray","toggle","useTransition","enter","leave","_ref","section","components_Works","Home","table","components_ThreeTable","Home_Show","App","react_router_dom","react_router","exact","path","component","Boolean","location","hostname","match","ReactDOM","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.859fa620.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport { MapControls } from 'three/examples/jsm/controls/MapControls.js';\r\n\r\n\r\nclass ThreeBackground extends Component {\r\n\tstate = {\r\n\r\n\t}\r\n\r\n\tstart = () => {\r\n\t\tif (!this.frameId) {\r\n\t\t\tthis.frameId = requestAnimationFrame(this.animate)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.scene = new THREE.Scene();\r\n\t\t// this.scene.background = new THREE.Color(0xf4f4f4);\r\n\t\tthis.scene.background = new THREE.Color(0x00000);\r\n\t\tthis.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\n\t\tthis.camera.position.set(0, 0, 0);\r\n\t\tthis.renderer = new THREE.WebGLRenderer();\r\n\t\tthis.renderer.setSize( window.innerWidth, window.innerHeight );\r\n\t\t// this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n\t\tthis.controls = new MapControls( this.camera, this.renderer.domElement );\r\n\t\tthis.renderer.shadowMap.enabled = true;\r\n\t\tthis.renderer.shadowMap.type = THREE.BasicShadowMap;\r\n\r\n\t\tthis.mount.appendChild(this.renderer.domElement);\r\n\r\n\r\n\t\tthis.scene.add( new THREE.AmbientLight( 0x111122 ) );\r\n\r\n\t\tconst sphereGeometry = new THREE.SphereGeometry(0.3, 32, 32);\r\n\t\tconst sphereMaterial = new THREE.MeshBasicMaterial({color: 0xffff00});\r\n\t\tconst asphere = new THREE.Mesh(sphereGeometry, sphereMaterial);\r\n\t\tthis.scene.add(asphere);\r\n\r\n\t\tconst boxGeometry = new THREE.BoxBufferGeometry( 10, 60, 10 );\r\n\t\tconst boxMaterial = new THREE.MeshPhongMaterial( {\r\n\t\t\t\t\tcolor: 0xa0adaf,\r\n\t\t\t\t\tshininess: 10,\r\n\t\t\t\t\tspecular: 0x111111,\r\n\t\t\t\t\tside: THREE.BackSide\r\n\t\t\t\t} );\r\n\t\tconst box = new THREE.Mesh( boxGeometry, boxMaterial );\r\n\t\tbox.receiveShadow = true;\r\n\t\tbox.position.y = 10;\r\n\t\tthis.scene.add( box );\r\n\r\n\t\tvar intensity = 1.5;\r\n\t\tvar pointLight = new THREE.PointLight( 0xffffff, intensity, 20 );\r\n\t\tpointLight.castShadow = true;\r\n\t\tpointLight.shadow.camera.near = 1;\r\n\t\tpointLight.shadow.camera.far = 60;\r\n\t\tpointLight.shadow.bias = - 0.005; // reduces self-shadowing on double-sided objects\r\n\t\tvar geometry = new THREE.SphereBufferGeometry( 0.3, 12, 6 );\r\n\t\tvar material = new THREE.MeshBasicMaterial( { color: 0xffffff } );\r\n\t\tmaterial.color.multiplyScalar( intensity );\r\n\t\tvar sphere = new THREE.Mesh( geometry, material );\r\n\t\tpointLight.add( sphere );\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = 2;\r\n\t\tcanvas.height = 2;\r\n\t\tvar context = canvas.getContext( '2d' );\r\n\t\tcontext.fillStyle = 'white';\r\n\t\tcontext.fillRect( 0, 1, 2, 1 );\r\n\t\tvar texture = new THREE.CanvasTexture( canvas );\r\n\t\ttexture.magFilter = THREE.NearestFilter;\r\n\t\ttexture.wrapT = THREE.RepeatWrapping;\r\n\t\ttexture.wrapS = THREE.RepeatWrapping;\r\n\t\ttexture.repeat.set( 1, 3.5 );\r\n\t\tvar geometry = new THREE.SphereBufferGeometry( 2, 32, 8 );\r\n\t\tvar material = new THREE.MeshPhongMaterial( {\r\n\t\t\tside: THREE.DoubleSide,\r\n\t\t\talphaMap: texture,\r\n\t\t\talphaTest: 0.5\r\n\t\t} );\r\n\t\tvar sphere = new THREE.Mesh( geometry, material );\r\n\t\tsphere.castShadow = true;\r\n\t\tsphere.receiveShadow = true;\r\n\t\tpointLight.add( sphere );\r\n\t\t// custom distance material\r\n\t\tvar distanceMaterial = new THREE.MeshDistanceMaterial( {\r\n\t\t\talphaMap: material.alphaMap,\r\n\t\t\talphaTest: material.alphaTest\r\n\t\t} );\r\n\t\tsphere.customDistanceMaterial = distanceMaterial;\r\n\t\tthis.scene.add(pointLight)\r\n\r\n\r\n\r\n\t\tthis.camera.position.z = 5;\r\n\t\tthis.start()\r\n\t}\r\n\r\n\tanimate = () => {\r\n\t\tthis.frameId = window.requestAnimationFrame(this.animate);\r\n\t\tthis.renderer.render( this.scene, this.camera );\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div ref={(mount) => { this.mount = mount }} className=\"canvas\">\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default ThreeBackground;\r\n","import React, { Component, useState } from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport { MapControls } from 'three/examples/jsm/controls/MapControls.js';\r\nimport { TessellateModifier } from 'three/examples/jsm/modifiers/TessellateModifier.js';\r\nimport {useSpring, animated, useTransition} from 'react-spring'\r\nconst TWEEN = require('@tweenjs/tween.js');\r\nTHREE = window.THREE = require('three');\r\nrequire('three/examples/js/loaders/GLTFLoader');\r\n\r\n\r\nclass ThreeTable extends Component {\r\n\tstate = {\r\n\t\trotate: false,\r\n\t\tpressed: false,\r\n\t\tdistorted: false,\r\n\t\tcheckItersect: true,\r\n\t\tloaded: false,\r\n\t\tshowReset: false\r\n\t}\r\n\r\n\tstart = () => {\r\n\t\tif (!this.frameId) {\r\n\t\t\tthis.frameId = requestAnimationFrame(this.animate)\r\n\t\t}\r\n\t}\r\n\r\n\thandleScroll = (e) => {\r\n\t\t// this.camera.lookAt (new THREE.Vector3 (111, 0, 0));\r\n\t\tif (e.deltaY > 0){\r\n\t\t\tthis.animateVector3(this.controls.target, new THREE.Vector3(0, 100, 0), {\r\n\t\t\t\tduration: 1000,\r\n\t\t\t\teasing : TWEEN.Easing.Quadratic.InOut,\r\n\t\t\t\trunOnUpdate: this.controls.update\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tonClick = () => {\r\n\t\tthis.raycaster.setFromCamera(this.mouse, this.camera);\r\n\t\tconst intersects = this.raycaster.intersectObjects(this.scene.children);\r\n\t\tif(intersects.length > 0 && this.containsObject(intersects[0].object)) {\r\n\t\t\tintersects[0].object.onClick();\r\n\t\t}\r\n\t}\r\n\r\n\tanimateVector3 = (vectorToAnimate, target, options) => {\r\n\r\n\t\t\toptions = options || {};\r\n\t\t\t// get targets from options or set to defaults\r\n\t\t\tvar to = target || THREE.Vector3(),\r\n\t\t\t\t\teasing = options.easing || TWEEN.Easing.Quadratic.In,\r\n\t\t\t\t\tduration = options.duration || 2000;\r\n\t\t\t// create the tween\r\n\t\t\tvar that = this;\r\n\t\t\tvar tweenVector3 = new TWEEN.Tween(vectorToAnimate)\r\n\t\t\t\t\t.to({ x: to.x, y: to.y, z: to.z, }, duration)\r\n\t\t\t\t\t.easing(easing)\r\n\t\t\t\t\t.onUpdate(function(d) {\r\n\t\t\t\t\t\t\tif(options.update){\r\n\t\t\t\t\t\t\t\t\toptions.update(d);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(options.runOnUpdate){\r\n\t\t\t\t\t\t\t\toptions.runOnUpdate()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t })\r\n\t\t\t\t\t.onComplete(function(){\r\n\t\t\t\t\t\tif(options.callback) options.callback();\r\n\t\t\t\t\t});\r\n\t\t\t// start the tween\r\n\t\t\ttweenVector3.start();\r\n\t\t\t// return the tween in case we want to manipulate it later on\r\n\t\t\treturn tweenVector3;\r\n\t}\r\n\r\n\tfitCameraToObject = (camera, controls, selection, fitOffset = 1) => {\r\n\r\n\t\tconst box = new THREE.Box3();\r\n\r\n\t\tfor( const object of selection ) box.expandByObject( object );\r\n\r\n\t\tconst size = box.getSize( new THREE.Vector3() );\r\n\t\tconst center = box.getCenter( new THREE.Vector3() );\r\n\r\n\t\tconst maxSize = Math.max( size.x, size.y, size.z );\r\n\t\tconst fitHeightDistance = maxSize / ( 2 * Math.atan( Math.PI * camera.fov / 360 ) );\r\n\t\tconst fitWidthDistance = fitHeightDistance / camera.aspect;\r\n\t\tconst distance = fitOffset * Math.max( fitHeightDistance, fitWidthDistance );\r\n\r\n\t\tconst direction = controls.target.clone()\r\n\t\t\t.sub( camera.position )\r\n\t\t\t.normalize()\r\n\t\t\t.multiplyScalar( distance );\r\n\r\n\t\tcontrols.maxDistance = distance * 10;\r\n\t\tcontrols.target.copy(center);\r\n\r\n\t\tcamera.near = distance / 100;\r\n\t\tcamera.far = distance * 100;\r\n\t\tcamera.updateProjectionMatrix();\r\n\r\n\t\tcamera.position.copy(controls.target).sub(direction);\r\n\r\n\t\tcontrols.update();\r\n\r\n\t}\r\n\r\n\tcontainsObject = (obj) => {\r\n\t\tfor(const x in this.objectsIncluded) {\r\n\t\t\tif(this.objectsIncluded.hasOwnProperty(x) && this.objectsIncluded[x] === obj){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tcheckIfIntersects = () => {\r\n\t\tthis.raycaster.setFromCamera(this.mouse, this.camera);\r\n\t\tconst intersects = this.raycaster.intersectObjects(this.scene.children);\r\n\t\tif(intersects.length > 0) {\r\n\t\t\tif(this.intersected !== intersects[0].object) {\r\n\t\t\t\tif(this.intersected && this.containsObject(this.intersected)) {\r\n\t\t\t\t\tthis.intersected.stopHover();\r\n\t\t\t\t}\r\n\t\t\t\tthis.intersected = intersects[0].object;\r\n\t\t\t\tif(this.containsObject(this.intersected)){\r\n\t\t\t\t\tthis.intersected.hover();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif(this.intersected && this.containsObject(this.intersected)){\r\n\t\t\t\tthis.intersected.stopHover();\r\n\t\t\t}\r\n\t\t\tthis.intersected = null;\r\n\t\t}\r\n\t}\r\n\r\n\tonMouseMove = (event) => {\r\n\t\tthis.mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\r\n\t\tthis.mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\r\n\t\tthis.raycaster.setFromCamera(this.mouse, this.camera);\r\n\t\tthis.raycaster.ray.intersectPlane(this.plane, this.pointOfIntersection);\r\n  \tthis.box.lookAt(this.pointOfIntersection);\r\n\t\tthis.gltf.lookAt(this.pointOfIntersection)\r\n\t}\r\n\r\n\tsceneSetup = () => {\r\n\t\tthis.scene = new THREE.Scene();\r\n\t\tthis.scene.background = new THREE.Color( \"rgba(254, 254, 254, 0.3)\" );\r\n\t\tthis.renderer = new THREE.WebGLRenderer({ antialias: true });\r\n\t\tthis.renderer.shadowMap.enabled = true;\r\n\t\tthis.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n\t\tthis.renderer.setPixelRatio( window.devicePixelRatio );\r\n\t\tthis.renderer.setSize( window.innerWidth, window.innerHeight );\r\n\r\n\t\tthis.mount.appendChild(this.renderer.domElement);\r\n\r\n\t\tthis.camera = new THREE.PerspectiveCamera( 90, window.innerWidth / window.innerHeight, 1, 1000 );\r\n\t\tthis.camera.position.set(0, 100, 100);\r\n\t\tthis.controls = new MapControls( this.camera, this.renderer.domElement );\r\n\t\tthis.controls.enabled = false;\r\n\t\tthis.controls.enableZoom = false;\r\n\t\tthis.controls.target = new THREE.Vector3(0, 0, 99);\r\n\t\tthis.controls.update();\r\n\r\n\t\twindow.addEventListener('resize', () => {\r\n\t\t\tthis.fitCameraToObject(this.camera, this.controls, [this.mainText, this.portfolio], window.innerWidth > 1000 ? 1.2 : 1.3);\r\n\t\t\tthis.renderer.setSize(window.innerWidth, window.innerHeight);\r\n\t\t\tthis.camera.aspect = window.innerWidth / window.innerHeight;\r\n\t\t\tthis.camera.updateProjectionMatrix();\r\n\t\t});\r\n\r\n\t\tthis.mouse = new THREE.Vector2();\r\n\t\tthis.intersected = null;\r\n\t\tthis.raycaster = new THREE.Raycaster();\r\n\r\n\t\tthis.uniforms = {\r\n\t\t\tamplitude: { value: 0.0 }\r\n\t\t};\r\n\t\tthis.counter = 0;\r\n\r\n\r\n\t\tthis.objectsIncluded = [];\r\n\t\tthis.objectsToShake = [];\r\n\t}\r\n\r\n\tlightSetup = () => {\r\n\t\tlet light;\r\n\t\tlight = new THREE.AmbientLight(0x404040, 2);\r\n\t\tthis.scene.add(light);\r\n\t\tlight = new THREE.DirectionalLight(0xffffff, 0.5);\r\n\t\tthis.scene.add(light);\r\n\t}\r\n\r\n\tbutton = (obj, background) => {\r\n\t\tconst position = obj.position;\r\n\t\tconst size = new THREE.Box3().setFromObject(obj).getSize();\r\n\t\tconst geometry = new THREE.PlaneGeometry(size.x*2+8, size.z*2+8, 2);\r\n\t\tconst material = new THREE.MeshLambertMaterial({transparent: true, opacity: 0});\r\n\t\tconst mesh = new THREE.Mesh(geometry, material);\r\n\t\tmesh.rotation.setFromVector3(new THREE.Vector3(Math.PI / -2, 0, 0));\r\n\t\tmesh.position.set(position.x, position.y+1, position.z);\r\n\t\tmesh.hover = () => {\r\n\t\t\tdocument.body.style.cursor = 'pointer';\r\n\t\t\tbackground.hover();\r\n\t\t}\r\n\t\tmesh.stopHover = () => {\r\n\t\t\tdocument.body.style.cursor = 'default';\r\n\t\t\tbackground.stopHover();\r\n\t\t}\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\ttextBackground = (obj) => {\r\n\t\tconst position = obj.position;\r\n\t\tconst size = new THREE.Box3().setFromObject(obj).getSize();\r\n\t\tconst geometry = new THREE.BoxGeometry(size.x*2+8, 0, 2);\r\n\t\tconst material = new THREE.MeshLambertMaterial({color: 0x000000, transparent: true, opacity: 0});\r\n\t\tconst mesh = new THREE.Mesh(geometry, material);\r\n\t\tconsole.log('here mesh', mesh)\r\n\t\tmesh.rotation.setFromVector3(new THREE.Vector3(Math.PI / -2, 0, 0));\r\n\t\tmesh.position.set(position.x, position.y-1, position.z);\r\n\t\tmesh.hover = () => {\r\n\t\t\tmesh.material.opacity = 0.2;\r\n\t\t\tnew TWEEN.Tween(mesh.scale)\r\n\t\t\t.to({ y: 20 }, 200)\r\n\t\t\t.easing(TWEEN.Easing.Quadratic.Out)\r\n\t\t\t.start();\r\n\t\t}\r\n\t\tmesh.stopHover = () => {\r\n\t\t\tnew TWEEN.Tween(mesh.scale)\r\n\t\t\t.to({ y: 1 }, 200)\r\n\t\t\t.easing(TWEEN.Easing.Quadratic.Out)\r\n\t\t\t.onComplete(() => mesh.material.opacity = 0)\r\n\t\t\t.start();\r\n\t\t}\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\ttext = (text, uniforms, font, size, posx, posy, posz) => {\r\n\t\tlet geometry, mesh;\r\n\r\n\t\tgeometry = new THREE.TextGeometry(text, {\r\n\t\t\tfont: font,\r\n\t\t\tsize: size,\r\n\t\t\theight: 0.01,\r\n\t\t\tcurveSegments: 4,\r\n\t\t\tbevelThickness: 0.3,\r\n\t\t\tbevelSize: 0.01,\r\n\t\t\tbevelEnabled: true\r\n\t\t});\r\n\t\tgeometry.center();\r\n\r\n\r\n\t\tconst tessellateModifier = new TessellateModifier( 1 );\r\n\r\n\t\t// how many pieces is the string split into\r\n\t\tfor (let i=0; i<6; i++) {\r\n\t\t\ttessellateModifier.modify(geometry);\r\n\t\t}\r\n\r\n\t\tgeometry = new THREE.BufferGeometry().fromGeometry(geometry);\r\n\r\n\t\tconst numFaces = geometry.attributes.position.count / 3;\r\n\t\tconst displacement = new Float32Array( numFaces * 6 * 3 );\r\n\t\tfor ( var f = 0; f < numFaces; f ++ ) {\r\n\t\t\tconst index = 9 * f;\r\n\t\t\tconst d = 111 * ( 0.5 - Math.random() );\r\n\t\t\tfor ( var i = 0; i < 1111; i++ ) {\r\n\t\t\t\tdisplacement[ index + ( 3 * i ) ] = d;\r\n\t\t\t\tdisplacement[ index + ( 3 * i ) + 1 ] = d;\r\n\t\t\t\tdisplacement[ index + ( 3 * i ) + 2 ] = d;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tgeometry.addAttribute('displacement', new THREE.BufferAttribute(displacement, 3));\r\n\r\n\t\tconst shaderMaterial = new THREE.ShaderMaterial({\r\n\t\t\tuniforms: uniforms,\r\n\t\t\tvertexShader: document.getElementById('vertexshader').textContent,\r\n\t\t\tfragmentShader: document.getElementById('fragmentshader').textContent\r\n\t\t});\r\n\r\n\t\tmesh = new THREE.Mesh(geometry, shaderMaterial);\r\n\t\tmesh.rotation.setFromVector3(new THREE.Vector3(Math.PI / -2, 0, 0));\r\n\t\tmesh.position.set(posx, posy, posz);\r\n\r\n\t\tmesh.shake = () => {\r\n\t\t\tmesh.position.set(posx+Math.random()*10-5, posy+Math.random()*10-5, posz+Math.random()*10-5);\r\n\t\t\tmesh.material.uniforms.amplitude.value += 0.001;\r\n\t\t}\r\n\r\n\t\tmesh.rotate = () => {\r\n\t\t\tmesh.rotation.y += 0.001;\r\n\t\t\tmesh.rotation.x += 0.001;\r\n\t\t\tmesh.rotation.z += 0.001;\r\n\t\t}\r\n\r\n\t\tmesh.reset = () => {\r\n\t\t\tnew TWEEN.Tween(mesh.position)\r\n\t\t\t.to({x: posx, y: posy, z: posz}, 5000)\r\n\t\t\t.easing(TWEEN.Easing.Quadratic.Out)\r\n\t\t\t.start();\r\n\t\t\tnew TWEEN.Tween(mesh.rotation)\r\n\t\t\t.to({x:Math.PI / -2, y: 0, z: 0})\r\n\t\t\t.easing(TWEEN.Easing.Quadratic.Out)\r\n\t\t\t.start();\r\n\t\t}\r\n\r\n\t\tmesh.resetQuick = () => {\r\n\t\t\tmesh.position.set(posx, posy, posz);\r\n\t\t}\r\n\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\ttextSetup = () => {\r\n\t\tnew THREE.FontLoader().load('fonts/Modern Sans_Regular.json', font => {\r\n\t\t\tthis.mainText = this.text(\"Hi, I'm a full-stack developer.\", this.uniforms, font, 10, 0, 0, 0);\r\n\t\t\tthis.scene.add(this.mainText);\r\n\t\t\tthis.objectsToShake.push(this.mainText);\r\n\r\n\t\t\tthis.portfolio = this.text('Work', this.uniforms, font, 7, -80, 0, 250);\r\n\t\t\tthis.portfolioBackground = this.textBackground(this.portfolio);\r\n\t\t\tthis.portfolioButton = this.button(this.portfolio, this.portfolioBackground);\r\n\t\t\tthis.portfolioButton.onClick = () => {\r\n\t\t\t\tdocument.body.style.cursor = 'default';\r\n\t\t\t\tthis.props.showWork();\r\n\t\t\t}\r\n\t\t\tthis.scene.add(this.portfolio);\r\n\t\t\tthis.scene.add(this.portfolioBackground);\r\n\t\t\tthis.scene.add(this.portfolioButton);\r\n\t\t\tthis.objectsIncluded.push(this.portfolioButton);\r\n\t\t\tthis.objectsToShake.push(this.portfolio);\r\n\r\n\t\t\tthis.CV = this.text('Resume', this.uniforms, font, 7, 50, 0, 250);\r\n\t\t\tthis.CVBackground = this.textBackground(this.CV);\r\n\t\t\tthis.CVButton = this.button(this.CV, this.CVBackground);\r\n\t\t\tthis.CVButton.onClick = () => {\r\n\t\t\t\twindow.open('/Przemyslaw_Maranowski_CV.pdf')\r\n\t\t\t}\r\n\t\t\tthis.scene.add(this.CV);\r\n\t\t\tthis.scene.add(this.CVBackground);\r\n\t\t\tthis.scene.add(this.CVButton);\r\n\t\t\tthis.objectsIncluded.push(this.CVButton);\r\n\t\t\tthis.objectsToShake.push(this.CV);\r\n\r\n\t\t\tthis.fitCameraToObject(this.camera, this.controls, [this.mainText, this.portfolio, this.CV], window.innerWidth > 1000 ? 1.2 : 1.3);\r\n\t\t});\r\n\t}\r\n\r\n\tloadFrank = () => {\r\n\t\tconst objectLoader = new THREE.GLTFLoader();\r\n\t\tobjectLoader.load(\r\n\t\t\t'models/frank-2.glb',\r\n\t\t\tgltf => {\r\n\r\n\t\t\t\tgltf.scene.traverse(node => {\r\n\t      \tif ( node instanceof THREE.Mesh ) { node.castShadow = true; }\r\n\t\t    });\r\n\r\n\t\t\t\tthis.gltf = gltf.scene;\r\n\t\t\t\tthis.gltf.scale.set(0.15, 0.15, 0.15);\r\n\t\t\t\tthis.gltf.up = new THREE.Vector3(0, 0, -1);\r\n\t\t\t\tthis.gltf.position.set(0, 0, 130);\r\n\t\t\t\tthis.gltf.rotation.set(Math.PI / -2, 0, 0);\r\n\t\t\t\tthis.gltf.castShadow = true;\r\n\t\t\t\tthis.gltf.receiveShadow = true;\r\n\r\n\t\t\t\tnew TWEEN.Tween(this.gltf.position)\r\n\t\t\t\t.to({y: 15}, 3000)\r\n\t\t\t\t.yoyo(true)\r\n\t\t\t\t.repeat(Infinity)\r\n\t\t\t\t.easing(TWEEN.Easing.Quadratic.Out)\r\n\t\t\t\t.start();\r\n\r\n\r\n\t\t\t\tthis.gltf.shake = () => {\r\n\t\t\t\t\tthis.gltf.position.set(Math.random()*20-5, Math.random()*20-5, 130+Math.random()*20-5);\r\n\t\t\t\t\t// this.gltf.scale.x -= 0.0013;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.gltf.reset = () => {\r\n\t\t\t\t\tnew TWEEN.Tween(this.gltf.scale)\r\n\t\t\t\t\t.to({z: 0.15, x: 0.15, y: 0.15}, 2000)\r\n\t\t\t\t\t.start();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.gltf.pressingDown = () => {\r\n\r\n\t\t\t\t\tconst t2 = new TWEEN.Tween(this.gltf.scale)\r\n\t\t\t\t\t.to({z: 0, x: 0, y: 0}, 2000)\r\n\t\t\t\t\t// .yoyo(true)\r\n\t\t\t\t\t// .repeat(Infinity)\r\n\t\t\t\t\t.easing(TWEEN.Easing.Quadratic.In)\r\n\t\t\t\t\t.start();\r\n\r\n\t\t\t\t\tnew TWEEN.Tween(this.gltf.rotation)\r\n\t\t\t\t\t.to({x: 200}, 2000)\r\n\t\t\t\t\t.easing(TWEEN.Easing.Quadratic.In)\r\n\t\t\t\t\t.start();\r\n\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tthis.scene.add(this.gltf);\r\n\r\n\t\t\t\twindow.addEventListener('mousemove', this.onMouseMove, false);\r\n\t\t\t\twindow.addEventListener('click', this.onClick);\r\n\t\t\t\t//\r\n\t\t\t\twindow.addEventListener(\"mousedown\", this.pressingDown, false);\r\n\t\t\t\twindow.addEventListener(\"mouseup\", this.notPressingDown, false);\r\n\t\t\t\twindow.addEventListener(\"mouseleave\", this.notPressingDown, false);\r\n\r\n\t\t\t\twindow.addEventListener(\"touchstart\", this.pressingDown, false);\r\n\t\t\t\twindow.addEventListener(\"touchend\", this.notPressingDown, false);\r\n\r\n\t\t\t\tthis.setState({loaded: true})\r\n\r\n\t\t})\r\n\r\n\t\t// var planeGeometry = new THREE.PlaneBufferGeometry( 2000, 200, 32, 32 );\r\n\t\t// var planeMaterial = new THREE.MeshStandardMaterial( { side: THREE.DoubleSide} )\r\n\t\t// var plane = new THREE.Mesh( planeGeometry, planeMaterial );\r\n\t\t// plane.receiveShadow = true;\r\n\t\t// plane.position.z = 200;\r\n\t\t// this.scene.add( plane );\r\n\t\t//\r\n\t\t// var spotLight = new THREE.SpotLight( 0xffffff );\r\n\t\t// spotLight.position.set( 0, 350, 0 );\r\n\t\t// spotLight.castShadow = true;\r\n\t\t//\r\n\t\t//\r\n\t\t// spotLight.shadow.mapSize.width = 1024;\r\n\t\t// spotLight.shadow.mapSize.height = 1024;\r\n\t\t//\r\n\t\t// spotLight.shadow.mapSize.width = 512;  // default\r\n\t\t// spotLight.shadow.mapSize.height = 512; // default\r\n\t\t// spotLight.shadow.camera.near = 0.5;       // default\r\n\t\t// spotLight.shadow.camera.far = 500\r\n\t\t// spotLight.power = 100;\r\n\t\t// spotLight.target = plane;\r\n\t\t//\r\n\t\t// this.scene.add( spotLight );\r\n\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.sceneSetup();\r\n\t\tthis.loadFrank();\r\n\t\tthis.lightSetup();\r\n\t\tthis.textSetup();\r\n\r\n\r\n\t\tthis.box = new THREE.Mesh(new THREE.BoxBufferGeometry(), new THREE.MeshNormalMaterial());\r\n\t\tthis.box.position.set(0, 0, 150);\r\n\t\tthis.box.geometry.translate(0, 0, 0.5);\r\n\t\tthis.box.scale.set(10, 10, 30);\r\n\t\tthis.box.up = new THREE.Vector3(0, 0, 1);\r\n\t\t// this.box.rotation.setFromVector3(new THREE.Vector3( 0, -Math.PI * 123, 0));\r\n\t\tconsole.log('box', this.box)\r\n\t\t// this.scene.add(this.box);\r\n\r\n\t\tthis.box.rotation.setFromVector3(new THREE.Vector3(Math.PI / -2, 0, 0));\r\n\r\n\t\tconst rotation = this.box.quaternion.clone();\r\n\r\n\t\tthis.plane = new THREE.Plane(new THREE.Vector3(0, 0, 1), -200);\r\n\t\tconsole.log('plane', this.plane)\r\n\t\tthis.plane.normal.set(0, 0, 1).applyQuaternion(rotation);\r\n\t\tthis.helper = new THREE.PlaneHelper( this.plane, 1000, 0xffff00 );\r\n\t\t// this.scene.add(this.helper);\r\n\t\tthis.pointOfIntersection = new THREE.Vector3();\r\n\r\n\r\n\t\t// window.addEventListener('wheel', this.handleScroll, true);\r\n\r\n\r\n\r\n\t\tthis.start()\r\n\t}\r\n\r\n\r\n\tpressingDown = () => {\r\n\t\tif(!this.state.distorted){\r\n\t\t\tthis.setState({pressed: true, checkItersect: false});\r\n\t\t}\r\n\t}\r\n\r\n\tnotPressingDown = () => {\r\n\t\tif(!this.state.distorted){\r\n\t\t\tif(this.counter < 150){\r\n\t\t\t\tthis.objectsToShake.forEach(x => x.resetQuick());\r\n\t\t\t\tnew TWEEN.Tween(this.uniforms.amplitude)\r\n\t\t\t\t\t.to({value: 0}, 500)\r\n\t\t\t\t\t.easing(TWEEN.Easing.Quadratic.Out)\r\n\t\t\t\t\t.start();\r\n\t\t\t\tthis.gltf.reset();\r\n\t\t\t}\r\n\t\t\tthis.counter = 0;\r\n\t\t\tthis.setState({distorted: false, pressed: false, checkItersect: true})\r\n\t\t}\r\n\t}\r\n\r\n\treset = () => {\r\n\t\tthis.counter = 0;\r\n\t\tthis.setState({rotate: false})\r\n\t\tthis.objectsToShake.forEach(x => x.reset());\r\n\t\tthis.gltf.reset();\r\n\t\tnew TWEEN.Tween(this.uniforms.amplitude)\r\n\t\t\t.to({value: 0}, 2000)\r\n\t\t\t.easing(TWEEN.Easing.Quadratic.Out)\r\n\t\t\t.onComplete(() => {\r\n\t\t\t\tthis.setState({rotate: false, pressed: false, distorted: false, checkItersect: true, showReset: false})\r\n\t\t\t})\r\n\t\t\t.start();\r\n\t}\r\n\r\n\tdistort = () => {\r\n\t\tnew TWEEN.Tween(this.uniforms.amplitude)\r\n\t\t\t.to({value: 12}, 1000)\r\n\t\t\t.easing(TWEEN.Easing.Quadratic.Out)\r\n\t\t\t.onComplete(() => this.setState({showReset: true}))\r\n\t\t\t.start();\r\n\t\tthis.gltf.scale.set(0.00001, 0.00001, 0.00001);\r\n\t}\r\n\r\n\tcheckTesselation = () => {\r\n\t\tif(this.state.pressed){\r\n\t\t\tif(this.counter < 150){\r\n\t\t\t\tthis.counter += 1;\r\n\t\t\t\tthis.objectsToShake.forEach(x => x.shake());\r\n\t\t\t\tthis.gltf.shake();\r\n\t\t\t}else{\r\n\t\t\t\tthis.setState({distorted: true, rotate: true, pressed: false});\r\n\t\t\t\tthis.distort();\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(this.state.rotate){\r\n\t\t\tthis.objectsToShake.forEach(x => x.rotate());\r\n\t\t}\r\n\t}\r\n\r\n\tanimate = () => {\r\n\t\tif(this.state.checkItersect){\r\n\t\t\tthis.checkIfIntersects();\r\n\t\t}\r\n\t\tthis.checkTesselation();\r\n\t\tthis.frameId = window.requestAnimationFrame(this.animate);\r\n\t\tthis.renderer.render( this.scene, this.camera );\r\n\t\tTWEEN.update()\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div ref={(mount) => { this.mount = mount }} className=\"canvas\"></div>\r\n\t\t\t\t{this.state.showReset ?\r\n\t\t\t\t\t<div className=\"resetBtn\" onClick={() => this.reset()}>\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\">Reset</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t: null}\r\n\t\t\t\t{this.state.loaded ? null : <div className=\"pulsating-circle\"></div> }\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default ThreeTable;\r\n","import React, { Component } from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport { MapControls } from 'three/examples/jsm/controls/MapControls.js';\r\nconst TWEEN = require('@tweenjs/tween.js');\r\n\r\n\r\nclass WaveTest extends Component {\r\n\tstate = {\r\n\r\n\t}\r\n\r\n\tstart = () => {\r\n\t\tif (!this.frameId) {\r\n\t\t\tthis.frameId = requestAnimationFrame(this.animate)\r\n\t\t}\r\n\t}\r\n\r\n\tcontainsObject = (obj) => {\r\n\t\tfor(const x in this.objectsIncluded) {\r\n\t\t\tif(this.objectsIncluded.hasOwnProperty(x) && this.objectsIncluded[x] === obj){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tanimateVector3 = (vectorToAnimate, target, options) => {\r\n\r\n\t\t\toptions = options || {};\r\n\t\t\t// get targets from options or set to defaults\r\n\t\t\tvar to = target || THREE.Vector3(),\r\n\t\t\t\t\teasing = options.easing || TWEEN.Easing.Quadratic.In,\r\n\t\t\t\t\tduration = options.duration || 2000;\r\n\t\t\t// create the tween\r\n\t\t\tvar that = this;\r\n\t\t\tvar tweenVector3 = new TWEEN.Tween(vectorToAnimate)\r\n\t\t\t\t\t.to({ x: to.x, y: to.y, z: to.z, }, duration)\r\n\t\t\t\t\t.easing(easing)\r\n\t\t\t\t\t.onUpdate(function(d) {\r\n\t\t\t\t\t\t\tif(options.update){\r\n\t\t\t\t\t\t\t\t\toptions.update(d);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(options.runOnUpdate){\r\n\t\t\t\t\t\t\t\toptions.runOnUpdate()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t })\r\n\t\t\t\t\t.onComplete(function(){\r\n\t\t\t\t\t\tif(options.callback) options.callback();\r\n\t\t\t\t\t});\r\n\t\t\t// start the tween\r\n\t\t\ttweenVector3.start();\r\n\t\t\t// return the tween in case we want to manipulate it later on\r\n\t\t\treturn tweenVector3;\r\n\t}\r\n\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.scene = new THREE.Scene();\r\n\t\tthis.scene.background = new THREE.Color( 0xffffff );\r\n\t\tthis.renderer = new THREE.WebGLRenderer( { antialias: true } );\r\n\t\tthis.renderer.setPixelRatio( window.devicePixelRatio );\r\n\t\tthis.renderer.setSize( window.innerWidth, window.innerHeight );\r\n\r\n\t\tthis.mount.appendChild(this.renderer.domElement);\r\n\r\n\t\tthis.camera = new THREE.PerspectiveCamera( 90, window.innerWidth / window.innerHeight, 1, 10000 );\r\n\t\tthis.camera.position.set( 0, 100, 0 );\r\n\r\n\t\tthis.controls = new MapControls( this.camera, this.renderer.domElement );\r\n\t\t// this.controls.enableZoom = false;\r\n\t\tthis.controls.target = new THREE.Vector3(0, 0, 0);\r\n\t\tthis.controls.update();\r\n\r\n\t\twindow.addEventListener('resize', () => {\r\n\t\t\tthis.renderer.setSize(window.innerWidth, window.innerHeight);\r\n\t\t\tthis.camera.aspect = window.innerWidth / window.innerHeight;\r\n\t\t\tthis.camera.updateProjectionMatrix();\r\n\t\t});\r\n\r\n\r\n\t\tvar SEPARATION = 100, AMOUNTX = 50, AMOUNTY = 50;\r\n\t\tvar container, stats;\r\n\t\tvar camera, scene, renderer;\r\n\t\tvar particles, count = 0;\r\n\t\tvar mouseX = 0, mouseY = 0;\r\n\t\tvar windowHalfX = window.innerWidth / 2;\r\n\t\tvar windowHalfY = window.innerHeight / 2;\r\n\r\n\r\n\t\tvar numParticles = AMOUNTX * AMOUNTY;\r\n\t\tvar positions = new Float32Array( numParticles * 3 );\r\n\t\tvar scales = new Float32Array( numParticles );\r\n\t\tvar i = 0, j = 0;\r\n\t\tfor ( var ix = 0; ix < AMOUNTX; ix ++ ) {\r\n\t\t\tfor ( var iy = 0; iy < AMOUNTY; iy ++ ) {\r\n\t\t\t\tpositions[ i ] = ix * SEPARATION - ( ( AMOUNTX * SEPARATION ) / 2 ); // x\r\n\t\t\t\tpositions[ i + 1 ] = 0; // y\r\n\t\t\t\tpositions[ i + 2 ] = iy * SEPARATION - ( ( AMOUNTY * SEPARATION ) / 2 ); // z\r\n\t\t\t\tscales[ j ] = 1;\r\n\t\t\t\ti += 3;\r\n\t\t\t\tj ++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\t\tgeometry.addAttribute( 'scale', new THREE.BufferAttribute( scales, 1 ) );\r\n\t\tvar material = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: {\r\n\t\t\t\tcolor: { value: new THREE.Color( 0x000000 ) },\r\n\t\t\t},\r\n\t\t\tvertexShader: document.getElementById( 'vertexshader' ).textContent,\r\n\t\t\tfragmentShader: document.getElementById( 'fragmentshader' ).textContent\r\n\t\t} );\r\n\t\t//\r\n\t\tthis.particles = new THREE.Points( geometry, material );\r\n\t\tthis.scene.add( this.particles );\r\n\t\tthis.count = 1;\r\n\r\n\r\n\r\n\r\n\t\tthis.start()\r\n\t}\r\n\r\n\r\n\r\n\r\n\tanimate = () => {\r\n\t\tthis.frameId = window.requestAnimationFrame(this.animate);\r\n\r\n\r\n\t\tvar positions = this.particles.geometry.attributes.position.array;\r\n\t\tvar scales = this.particles.geometry.attributes.scale.array;\r\n\t\tvar i = 0, j = 0;\r\n\t\tfor ( var ix = 0; ix < 50; ix ++ ) {\r\n\t\t\tfor ( var iy = 0; iy < 50; iy ++ ) {\r\n\t\t\t\tpositions[ i + 1 ] = ( Math.sin( ( ix + this.count ) * 0.3 ) * 50 ) +\r\n\t\t\t\t\t\t\t\t( Math.sin( ( iy + this.count ) * 0.5 ) * 50 );\r\n\t\t\t\tscales[ j ] = ( Math.sin( ( ix + this.count ) * 0.3 ) + 1 ) * 8 +\r\n\t\t\t\t\t\t\t\t( Math.sin( ( iy + this.count ) * 0.5 ) + 1 ) * 8;\r\n\t\t\t\ti += 3;\r\n\t\t\t\tj ++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.particles.geometry.attributes.position.needsUpdate = true;\r\n\t\tthis.particles.geometry.attributes.scale.needsUpdate = true;\r\n\t\tthis.renderer.render( this.scene, this.camera );\r\n\t\tthis.count += 0.1;\r\n\r\n\r\n\t\tTWEEN.update()\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div ref={(mount) => { this.mount = mount }} className=\"canvas\" >\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default WaveTest;\r\n","import React, { Component } from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport { MapControls } from 'three/examples/jsm/controls/MapControls.js';\r\nimport { TessellateModifier } from 'three/examples/jsm/modifiers/TessellateModifier.js';\r\nconst TWEEN = require('@tweenjs/tween.js');\r\n\r\nconst Square = () => {\r\n\tvar geometry = new THREE.BoxBufferGeometry( 1, 1, 1 );\r\n\tvar material = new THREE.MeshBasicMaterial( {color: 0x00ff00} );\r\n\tvar cube = new THREE.Mesh( geometry, material );\r\n\treturn cube;\r\n}\r\n\r\nconst Text = (text, uniforms, font) => {\r\n\tlet geometry, mesh;\r\n\r\n\tgeometry = new THREE.TextGeometry(text, {\r\n\t\tfont: font,\r\n\t\tsize: 10,\r\n\t\theight: 0.01,\r\n\t\tcurveSegments: 4,\r\n\t\tbevelThickness: 0.1,\r\n\t\tbevelSize: 0.001,\r\n\t\tbevelEnabled: true\r\n\t});\r\n\tgeometry.center();\r\n\r\n\r\n\tconst tessellateModifier = new TessellateModifier( 1 );\r\n\r\n\t// how many pieces is the string split into\r\n\tfor (let i=0; i<3; i++) {\r\n\t\ttessellateModifier.modify(geometry);\r\n\t}\r\n\r\n\tgeometry = new THREE.BufferGeometry().fromGeometry(geometry);\r\n\r\n\tconst numFaces = geometry.attributes.position.count / 3;\r\n\tconst displacement = new Float32Array( numFaces * 6 * 3 );\r\n\tfor ( var f = 0; f < numFaces; f ++ ) {\r\n\t\tconst index = 9 * f;\r\n\t\tconst d = 111 * ( 0.5 - Math.random() );\r\n\t\tfor ( var i = 0; i < 1111; i++ ) {\r\n\t\t\tdisplacement[ index + ( 3 * i ) ] = d;\r\n\t\t\tdisplacement[ index + ( 3 * i ) + 1 ] = d;\r\n\t\t\tdisplacement[ index + ( 3 * i ) + 2 ] = d;\r\n\t\t}\r\n\t}\r\n\r\n\tgeometry.addAttribute('displacement', new THREE.BufferAttribute(displacement, 3));\r\n\r\n\tconst shaderMaterial = new THREE.ShaderMaterial({\r\n\t\tuniforms: uniforms,\r\n\t\tvertexShader: document.getElementById('vertexshader').textContent,\r\n\t\tfragmentShader: document.getElementById('fragmentshader').textContent\r\n\t});\r\n\r\n\tmesh = new THREE.Mesh(geometry, shaderMaterial);\r\n\r\n\treturn mesh;\r\n}\r\n\r\nclass TesselationTest extends Component {\r\n\tstate = {\r\n\t\trotate: false,\r\n\t\tpressed: false,\r\n\t\tdistorted: false\r\n\t}\r\n\r\n\tstart = () => {\r\n\t\tif (!this.frameId) {\r\n\t\t\tthis.frameId = requestAnimationFrame(this.animate)\r\n\t\t}\r\n\t}\r\n\r\n\tcontainsObject = (obj) => {\r\n\t\tfor(const x in this.objectsIncluded) {\r\n\t\t\tif(this.objectsIncluded.hasOwnProperty(x) && this.objectsIncluded[x] === obj){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tanimateVector3 = (vectorToAnimate, target, options) => {\r\n\r\n\t\t\toptions = options || {};\r\n\t\t\t// get targets from options or set to defaults\r\n\t\t\tvar to = target || THREE.Vector3(),\r\n\t\t\t\t\teasing = options.easing || TWEEN.Easing.Quadratic.In,\r\n\t\t\t\t\tduration = options.duration || 2000;\r\n\t\t\t// create the tween\r\n\t\t\tvar that = this;\r\n\t\t\tvar tweenVector3 = new TWEEN.Tween(vectorToAnimate)\r\n\t\t\t\t\t.to({ x: to.x, y: to.y, z: to.z, }, duration)\r\n\t\t\t\t\t.easing(easing)\r\n\t\t\t\t\t.onUpdate(function(d) {\r\n\t\t\t\t\t\t\tif(options.update){\r\n\t\t\t\t\t\t\t\t\toptions.update(d);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(options.runOnUpdate){\r\n\t\t\t\t\t\t\t\toptions.runOnUpdate()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t })\r\n\t\t\t\t\t.onComplete(function(){\r\n\t\t\t\t\t\tif(options.callback) options.callback();\r\n\t\t\t\t\t});\r\n\t\t\t// start the tween\r\n\t\t\ttweenVector3.start();\r\n\t\t\t// return the tween in case we want to manipulate it later on\r\n\t\t\treturn tweenVector3;\r\n\t}\r\n\r\n\tsceneSetup = () => {\r\n\t\tthis.scene = new THREE.Scene();\r\n\t\tthis.scene.background = new THREE.Color( 0xffffff );\r\n\t\tthis.renderer = new THREE.WebGLRenderer( { antialias: true } );\r\n\t\tthis.renderer.setPixelRatio( window.devicePixelRatio );\r\n\t\tthis.renderer.setSize( window.innerWidth, window.innerHeight );\r\n\r\n\t\tthis.mount.appendChild(this.renderer.domElement);\r\n\r\n\t\tthis.camera = new THREE.PerspectiveCamera( 90, window.innerWidth / window.innerHeight, 1, 10000 );\r\n\t\tthis.camera.position.set( 20, 20, 40 );\r\n\r\n\t\tthis.controls = new MapControls( this.camera, this.renderer.domElement );\r\n\t\t// this.controls.enableZoom = false;\r\n\t\tthis.controls.target = new THREE.Vector3(0, 0, 0);\r\n\t\tthis.controls.update();\r\n\r\n\t\twindow.addEventListener('resize', () => {\r\n\t\t\tthis.renderer.setSize(window.innerWidth, window.innerHeight);\r\n\t\t\tthis.camera.aspect = window.innerWidth / window.innerHeight;\r\n\t\t\tthis.camera.updateProjectionMatrix();\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.sceneSetup();\r\n\r\n\t\t// var geometry = new THREE.BoxBufferGeometry( 1, 1, 1 );\r\n\t\t// var material = new THREE.MeshBasicMaterial( {color: 0x00ff00} );\r\n\t\t// var cube = new THREE.Mesh( geometry, material );\r\n\t\t// this.scene.add( cube );\r\n\t\tthis.scene.add(Square())\r\n\r\n\t\tthis.uniforms = {\r\n\t\t\tamplitude: { value: 0.0 }\r\n\t\t};\r\n\r\n\t\t// Text('heheh', this.uniforms).then((t) => {\r\n\t\t// \tconsole.log(t)\r\n\t\t// \tthis.scene.add(t)\r\n\t\t// })\r\n\r\n\t\tnew THREE.FontLoader().load('fonts/Modern Sans_Regular.json', font => {\r\n\t\t\tthis.mesh = Text(\"Hi, I'm a full-stack developer.\", this.uniforms, font);\r\n\t\t\tthis.scene.add(this.mesh)\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\r\n\t\t// window.addEventListener('click', this.distort)\r\n\r\n\t\tthis.counter = 0;\r\n\r\n\t\twindow.addEventListener(\"mousedown\", this.pressingDown, false);\r\n\t\twindow.addEventListener(\"mouseup\", this.notPressingDown, false);\r\n\t\twindow.addEventListener(\"mouseleave\", this.notPressingDown, false);\r\n\r\n\t\twindow.addEventListener(\"touchstart\", this.pressingDown, false);\r\n\t\twindow.addEventListener(\"touchend\", this.notPressingDown, false);\r\n\r\n\r\n\t\tthis.start()\r\n\t}\r\n\r\n\r\n\tpressingDown = () => {\r\n\t\tconsole.log(this.mesh)\r\n\t\tif(!this.state.distorted){\r\n\t\t\tthis.setState({pressed: true});\r\n\t\t}\r\n\t}\r\n\r\n\tshake = (mesh) => {\r\n\t\tmesh.position.set(Math.random()*10-5, Math.random()*10-5, Math.random()*10-5);\r\n\t\tmesh.material.uniforms.amplitude.value += 0.01;\r\n\t}\r\n\r\n\tnotPressingDown = () => {\r\n\t\tif(!this.state.distorted){\r\n\t\t\tif(this.counter < 100){\r\n\t\t\t\tnew TWEEN.Tween(this.uniforms.amplitude)\r\n\t\t\t\t\t.to({value: 0}, 500)\r\n\t\t\t\t\t.easing(TWEEN.Easing.Quadratic.Out)\r\n\t\t\t\t\t.start();\r\n\t\t\t}\r\n\t\t\tthis.counter = 0;\r\n\t\t\tthis.setState({distorted: false, pressed: false})\r\n\t\t}\r\n\t}\r\n\r\n\tdistort = () => {\r\n\t\tconst t1 = new TWEEN.Tween(this.uniforms.amplitude)\r\n\t\t\t.delay(10000)\r\n\t\t\t.to({value: 0}, 5000)\r\n\t\t\t.yoyo(true)\r\n\t\t\t.repeat(Infinity)\r\n\t\t\t.easing(TWEEN.Easing.Quadratic.Out)\r\n\t\tnew TWEEN.Tween(this.uniforms.amplitude)\r\n\t\t\t.to({value: 3}, 1000)\r\n\t\t\t.easing(TWEEN.Easing.Quadratic.Out)\r\n\t\t\t.chain(t1)\r\n\t\t\t.start();\r\n\t}\r\n\r\n\tcheckTesselation = () => {\r\n\t\tif(this.state.pressed){\r\n\t\t\tif(this.counter < 100){\r\n\t\t\t\tthis.counter += 1;\r\n\t\t\t\tthis.shake(this.mesh)\r\n\t\t\t}else{\r\n\t\t\t\tthis.setState({distorted: true, rotate: true, pressed: false});\r\n\t\t\t\tthis.distort();\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(this.state.rotate){\r\n\t\t\tthis.mesh.rotation.y += 0.001;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tanimate = () => {\r\n\t\tthis.checkTesselation();\r\n\t\tthis.frameId = window.requestAnimationFrame(this.animate);\r\n\t\tthis.renderer.render( this.scene, this.camera );\r\n\t\tTWEEN.update()\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div ref={(mount) => { this.mount = mount }} className=\"canvas\" >\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default TesselationTest;\r\n","import React, { Component } from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport { MapControls } from 'three/examples/jsm/controls/MapControls.js';\r\nimport { TessellateModifier } from 'three/examples/jsm/modifiers/TessellateModifier.js';\r\nconst TWEEN = require('@tweenjs/tween.js');\r\nTHREE = window.THREE = require('three');\r\nrequire('three/examples/js/loaders/GLTFLoader');\r\n\r\n\r\nclass ShadowTest extends Component {\r\n\tstate = {\r\n\t\trotate: false,\r\n\t\tpressed: false,\r\n\t\tdistorted: false,\r\n\t\tcheckItersect: true\r\n\t}\r\n\r\n\tstart = () => {\r\n\t\tif (!this.frameId) {\r\n\t\t\tthis.frameId = requestAnimationFrame(this.animate)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tonMouseMove = (event) => {\r\n\t\tthis.mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\r\n\t\tthis.mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\r\n\t}\r\n\r\n\tsceneSetup = () => {\r\n\t\tthis.scene = new THREE.Scene();\r\n\t\tthis.scene.background = new THREE.Color( \"rgba(255, 255, 255, 0.9)\" );\r\n\t\tthis.renderer = new THREE.WebGLRenderer();\r\n\t\tthis.renderer.shadowMap.enabled = true;\r\n\t\tthis.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n\t\tthis.renderer.setPixelRatio( window.devicePixelRatio );\r\n\t\tthis.renderer.setSize( window.innerWidth, window.innerHeight );\r\n\r\n\t\tthis.mount.appendChild(this.renderer.domElement);\r\n\r\n\t\tthis.camera = new THREE.PerspectiveCamera( 90, window.innerWidth / window.innerHeight, 1, 1000 );\r\n\t\tthis.camera.position.set(0, 100, 100);\r\n\t\tthis.controls = new OrbitControls( this.camera, this.renderer.domElement );\r\n\t\t// this.controls.enableZoom = false;\r\n\t\tthis.controls.target = new THREE.Vector3(0, 0, 99);\r\n\t\tthis.controls.update();\r\n\r\n\t\twindow.addEventListener('resize', () => {\r\n\t\t\tthis.fitCameraToObject(this.camera, this.controls, [this.mainText, this.portfolio], window.innerWidth > 1000 ? 1.2 : 1.3);\r\n\t\t\tthis.renderer.setSize(window.innerWidth, window.innerHeight);\r\n\t\t\tthis.camera.aspect = window.innerWidth / window.innerHeight;\r\n\t\t\tthis.camera.updateProjectionMatrix();\r\n\t\t});\r\n\r\n\t\tthis.mouse = new THREE.Vector2();\r\n\t\tthis.intersected = null;\r\n\t\tthis.raycaster = new THREE.Raycaster();\r\n\r\n\t\tthis.uniforms = {\r\n\t\t\tamplitude: { value: 0.0 }\r\n\t\t};\r\n\t\tthis.counter = 0;\r\n\r\n\t\twindow.addEventListener('mousemove', this.onMouseMove, false);\r\n\r\n\t\tthis.objectsIncluded = [];\r\n\t\tthis.objectsToShake = [];\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.sceneSetup();\r\n\r\n\t\tconst objectLoader = new THREE.GLTFLoader();\r\n\t\t\tobjectLoader.load('models/frank-2.glb', gltf => {\r\n\r\n\t\t\tgltf.scene.traverse( function( node ) {\r\n\r\n\t        if ( node instanceof THREE.Mesh ) { node.castShadow = true; }\r\n\r\n\t    } );\r\n\t\t\tconsole.log(gltf)\r\n\t\t\tthis.gltf = gltf.scene;\r\n\t\t\tthis.gltf.scale.set(0.1, 0.1, 0.1);\r\n\t\t\tthis.gltf.position.set(0, 0, 0);\r\n\t\t\tthis.gltf.castShadow = true;\r\n\t\t\tthis.gltf.receiveShadow = true;\r\n\r\n\r\n\t\t\tthis.scene.add(this.gltf);\r\n\t\t})\r\n\r\n\r\n\t\t// var sphereGeometry = new THREE.SphereBufferGeometry( 15, 32, 32 );\r\n\t\t// var sphereMaterial = new THREE.MeshStandardMaterial( { color: 0xff0000 } );\r\n\t\t// var sphere = new THREE.Mesh( sphereGeometry, sphereMaterial );\r\n\t\t// sphere.castShadow = true; //default is false\r\n\t\t// sphere.receiveShadow = false; //default\r\n\t\t// this.scene.add( sphere );\r\n\r\n\t\tvar spotLight = new THREE.SpotLight( 0xffffff );\r\n\t\tspotLight.position.set( 0, 100, 0 );\r\n\t\tspotLight.castShadow = true;\r\n\r\n\r\n\t\tspotLight.shadow.mapSize.width = 1024;\r\n\t\tspotLight.shadow.mapSize.height = 1024;\r\n\r\n\t\tspotLight.shadow.mapSize.width = 512;  // default\r\n\t\tspotLight.shadow.mapSize.height = 512; // default\r\n\t\tspotLight.shadow.camera.near = 0.5;       // default\r\n\t\tspotLight.shadow.camera.far = 500\r\n\t\tspotLight.power = 100;\r\n\t\t// spotLight.target = sphere;\r\n\r\n\t\tthis.scene.add( spotLight );\r\n\r\n\r\n\r\n\t\tvar planeGeometry = new THREE.PlaneBufferGeometry( 200, 200, 32, 32 );\r\n\t\tvar planeMaterial = new THREE.MeshStandardMaterial( { } )\r\n\t\tvar plane = new THREE.Mesh( planeGeometry, planeMaterial );\r\n\t\tplane.rotation.x = - Math.PI / 2.0;\r\n\t\tplane.receiveShadow = true;\r\n\t\tplane.position.y = -50;\r\n\t\tthis.scene.add( plane );\r\n\r\n\r\n\t\t// const directionalLight = new THREE.DirectionalLight( 0xffffff, 0.5 );\r\n\t\t// directionalLight.castShadow = true;\r\n\t\t// directionalLight.position.set( 0, 1, 1 );\r\n\t\t// directionalLight.position.multiplyScalar( 5 );\r\n\t\t// directionalLight.shadow.mapSize.width = 2048;\r\n\t\t// directionalLight.shadow.mapSize.height = 2048;\r\n\t\t// this.scene.add(directionalLight);\r\n\r\n\t\tconst textureLoader = new THREE.TextureLoader();\r\n\t\tconst floorMaterial = new THREE.MeshStandardMaterial({});\r\n\r\n\r\n\t\tconst floorGeometry = new THREE.PlaneBufferGeometry( 40, 40 );\r\n\t\tconst floorMesh = new THREE.Mesh( floorGeometry, floorMaterial );\r\n\t\tfloorMesh.receiveShadow = true;\r\n\t\tfloorMesh.rotation.x = - Math.PI / 2.0;\r\n\t\tfloorMesh.position.y = -50;\r\n\t\tthis.scene.add(floorMesh);\r\n\r\n\t\tthis.start()\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\tanimate = () => {\r\n\t\tthis.frameId = window.requestAnimationFrame(this.animate);\r\n\t\tthis.renderer.render( this.scene, this.camera );\r\n\t\tTWEEN.update()\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div ref={(mount) => { this.mount = mount }} className=\"canvas\" >\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default ShadowTest;\r\n","import React, { Component, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {useSpring, animated, useTransition} from 'react-spring'\r\n\r\nconst Technology = (state) => {\r\n\tconst {tech} = state;\r\n\tconst props = useSpring({\r\n\t  transform: 'translate3d(0,0px,0)',\r\n\t\tfrom : {transform: 'translate3d(0,-40px,0)'}\r\n\t})\r\n\treturn (\r\n\t\t<animated.div style={props}>\r\n\t\t<div className=\"techdiv\">\r\n\t\t\t{tech.map((item, i) =>\r\n\t\t\t\t<div className=\"tech\" key={i}>\r\n\t\t\t\t\t{item}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t\t</animated.div>\r\n\t)\r\n}\r\n\r\nconst GoToWebsite = (state) => {\r\n\tconst {link, github} = state;\r\n\tconst props = useSpring({\r\n\t\ttransform: 'translate3d(0,0px,0)',\r\n\t\tfrom : {transform: 'translate3d(0,40px,0)'}\r\n\t})\r\n\treturn (\r\n\t\t<animated.div style={props}>\r\n\t\t\t<a href={link} style={{color: 'white'}}>Go to website</a>\r\n\t\t\t{github ? <a href={github}><img src=\"img/GitHub-Mark-Light-32px.png\" style={{margin: 'auto', marginTop: '10px'}}/></a> : null}\r\n\t\t</animated.div>\r\n\t)\r\n}\r\n\r\nclass Work extends Component {\r\n\tstate = {\r\n\t\tshow: false,\r\n\t\timgIndex: 2\r\n\t}\r\n\r\n\tdelay = async(delayInms) => {\r\n\t\treturn new Promise(resolve  => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tresolve(2);\r\n\t\t\t}, delayInms);\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tthis.changeIndex();\r\n\t}\r\n\r\n\tchangeIndex = async() => {\r\n\t\tawait this.delay(4000);\r\n\t\tthis.setState({imgIndex: this.state.imgIndex+1})\r\n\t\tthis.changeIndex();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"mt-5 img-container\">\r\n\t\t\t\t{Array.isArray(this.props.img) ?\r\n\t\t\t\t\t<img src={this.props.img[this.state.imgIndex%this.props.img.length]} style={{maxWidth: '100%', border: '1px solid grey', width: '800px', boxShadow: '0 10px 20px rgba(0,0,0,0.15)'}} />\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<img src={this.props.img} style={{maxWidth: '100%', border: '1px solid grey', width: '800px', boxShadow: '0 10px 20px rgba(0,0,0,0.15)'}} />\r\n\t\t\t\t}\r\n\t\t\t\t<div className=\"overlay\" onMouseOver={() => this.setState({show: true})}>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t{this.state.show ? <Technology tech={this.props.tech} /> : null}\r\n\t\t\t\t\t\t{this.state.show ? <GoToWebsite link={this.props.link} github={this.props.github} /> : null}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Work;\r\n","import React, { Component, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {useSpring, animated, useTransition, useTrail} from 'react-spring'\r\nimport Work from './Work'\r\n\r\n\r\nclass Works extends Component {\r\n\tstate = {\r\n\t\tbool: false,\r\n\t\tworks: [\r\n\t\t\t{\r\n\t\t\t\tid: 1,\r\n\t\t\t\timg: 'img/rybieudko.png',\r\n\t\t\t\tlink: 'https://rybieudko.pl',\r\n\t\t\t\tgithub: '',\r\n\t\t\t\ttech: [\r\n\t\t\t\t\t'Flask',\r\n\t\t\t\t\t'JS',\r\n\t\t\t\t\t'CSS',\r\n\t\t\t\t\t'Bootstrap',\r\n\t\t\t\t\t'MySQL'\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: 2,\r\n\t\t\t\timg: ['img/chatmain.png', 'img/chatchat.png'],\r\n\t\t\t\tlink: 'https://xsphrx.github.io/chatapp/',\r\n\t\t\t\tgithub: 'https://github.com/xsphrx/chatapp',\r\n\t\t\t\ttech: [\r\n\t\t\t\t\t'React',\r\n\t\t\t\t\t'Redux',\r\n\t\t\t\t\t'Firebase',\r\n\t\t\t\t\t'Materialize CSS',\r\n\t\t\t\t\t'PWA'\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: 3,\r\n\t\t\t\timg: 'img/mxe.png',\r\n\t\t\t\tlink: 'https://mxe2025.pl',\r\n\t\t\t\tgithub: '',\r\n\t\t\t\ttech: [\r\n\t\t\t\t\t'Flask',\r\n\t\t\t\t\t'JS',\r\n\t\t\t\t\t'CSS'\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: 4,\r\n\t\t\t\timg: 'img/skupkomiksow.png',\r\n\t\t\t\tlink: 'https://www.skupkomiksow.pl/',\r\n\t\t\t\tgithub: '',\r\n\t\t\t\ttech: [\r\n\t\t\t\t\t'Flask',\r\n\t\t\t\t\t'JS',\r\n\t\t\t\t\t'CSS'\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: 5,\r\n\t\t\t\timg: 'img/zdroweziolo.png',\r\n\t\t\t\tlink: 'https://zdroweziolo.pl/',\r\n\t\t\t\tgithub: '',\r\n\t\t\t\ttech: [\r\n\t\t\t\t\t'Django',\r\n\t\t\t\t\t'JS',\r\n\t\t\t\t\t'CSS'\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t<div className=\"goBackButton\" onClick={this.props.showTable}>\r\n\t\t\t\t\t\t<div className=\"goBackText\">Go Back</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{this.state.works.map(item =>\r\n\t\t\t\t\t\t<Work key={item.id} img={item.img} link={item.link} tech={item.tech} github={item.github} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"mt-5\"></div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Works;\r\n","import React, { Component, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { NavLink } from 'react-router-dom';\r\nimport ThreeBackground from './ThreeBackground';\r\nimport ThreeTable from './ThreeTable';\r\nimport WaveTest from './WaveTest'\r\nimport TesselationTest from './TesselationTest'\r\nimport ShadowTest from './ShadowTest'\r\nimport Works from './Works'\r\nimport {useSpring, animated, useTransition} from 'react-spring'\r\n\r\nconst Show = (state) => {\r\n\tconst {showTable} = state;\r\n\tconst [toggle, setMessage] = useState(false)\r\n  const transitions = useTransition(toggle, null, {\r\n    from: { marginTop: '100%' },\r\n    enter: { marginTop: '0' },\r\n    leave: { marginTop: '100%' },\r\n  })\r\n\treturn transitions.map(({ item, key, props }) =>\r\n     <animated.section key={key} style={props}>\r\n\t\t \t<Works showTable={showTable} />\r\n\t\t </animated.section>\r\n  )\r\n}\r\n\r\nclass Home extends Component {\r\n\tstate = {\r\n\t\ttable: true\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{this.state.table ?\r\n\t\t\t\t\t<ThreeTable showWork={() => this.setState({table: false})} />\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col-1\"></div>\r\n\t\t\t\t\t\t\t<div className=\"col-10\">\r\n\t\t\t\t\t\t\t\t<Show showTable={() => this.setState({table: true})} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-1\"></div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path='/' component={Home} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}